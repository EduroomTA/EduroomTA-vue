/*CHECK BOX*/
.matter-checkbox {
    --matter-helper-theme: var(--matter-theme-rgb, var(--matter-primary-rgb, 33, 150, 243));
    --matter-helper-ontheme: var(--matter-ontheme-rgb, var(--matter-onprimary-rgb, 255, 255, 255));
    z-index: 0;
    position: relative;
    display: inline-block;
    color: rgba(var(--matter-onsurface-rgb, 0, 0, 0), 0.87);
    font-family: var(--matter-font-family, "Roboto", "Segoe UI", BlinkMacSystemFont, system-ui, -apple-system);
    font-size: 16px;
    line-height: 1.5;
}

/* Box */
.matter-checkbox > input {
    appearance: none;
    -moz-appearance: none;
    -webkit-appearance: none;
    z-index: 1;
    position: absolute;
    display: block;
    box-sizing: border-box;
    margin: 3px 1px;
    border: solid 2px; /* Safari */
    border-color: rgba(var(--matter-onsurface-rgb, 0, 0, 0), 0.6);
    border-radius: 2px;
    width: 18px;
    height: 18px;
    outline: none;
    cursor: pointer;
    transition: border-color 0.2s, background-color 0.2s;
}

/* Span */
.matter-checkbox > input + span {
    display: inline-block;
    box-sizing: border-box;
    padding-left: 30px;
    width: inherit;
    cursor: pointer;
}

/* Highlight */
.matter-checkbox > input + span::before {
    content: "";
    position: absolute;
    left: -10px;
    top: -8px;
    display: block;
    border-radius: 50%;
    width: 40px;
    height: 40px;
    background-color: rgb(var(--matter-onsurface-rgb, 0, 0, 0));
    opacity: 0;
    transform: scale(1);
    pointer-events: none;
    transition: opacity 0.3s, transform 0.2s;
}

/* Check Mark */
.matter-checkbox > input + span::after {
    content: "";
    z-index: 1;
    display: block;
    position: absolute;
    top: 3px;
    left: 1px;
    box-sizing: content-box;
    width: 10px;
    height: 5px;
    border: solid 2px transparent;
    border-right-width: 0;
    border-top-width: 0;
    pointer-events: none;
    transform: translate(3px, 4px) rotate(-45deg);
    transition: border-color 0.2s;
}

/* Checked, Indeterminate */
.matter-checkbox > input:checked,
.matter-checkbox > input:indeterminate {
    border-color: var(--color-primary);
    background-color: var(--color-primary);
}

.matter-checkbox > input:checked + span::before,
.matter-checkbox > input:indeterminate + span::before {
    background-color: var(--color-primary);
}

.matter-checkbox > input:checked + span::after,
.matter-checkbox > input:indeterminate + span::after {
    border-color: rgb(var(--matter-helper-ontheme, 255, 255, 255));
}

.matter-checkbox > input:indeterminate + span::after {
    border-left-width: 0;
    transform: translate(4px, 3px);
}

/* Hover, Focus */
.matter-checkbox:hover > input + span::before {
    opacity: 0.04;
}

.matter-checkbox > input:focus + span::before {
    opacity: 0.12;
}

.matter-checkbox:hover > input:focus + span::before {
    opacity: 0.16;
}

/* Active */
.matter-checkbox:active > input,
.matter-checkbox:active:hover > input {
    border-color: var(--color-primary);
}

.matter-checkbox:active > input:checked {
    border-color: transparent;
    background-color: rgba(var(--color-primary, 0, 0, 0), 0.6);
}

.matter-checkbox:active > input + span::before {
    opacity: 1;
    transform: scale(0);
    transition: transform 0s, opacity 0s;
}

/* Disabled */
.matter-checkbox > input:disabled {
    border-color: rgba(var(--matter-onsurface-rgb, 0, 0, 0), 0.38);
    cursor: initial;
}

.matter-checkbox > input:checked:disabled,
.matter-checkbox > input:indeterminate:disabled {
    border-color: transparent;
    background-color: rgba(var(--matter-onsurface-rgb, 0, 0, 0), 0.38);
}

.matter-checkbox > input:disabled + span {
    color: rgba(var(--matter-onsurface-rgb, 0, 0, 0), 0.38);
    cursor: initial;
}

.matter-checkbox > input:disabled + span::before {
    opacity: 0;
    transform: scale(0);
}













/*RADIO BUTTON*/
.matter-radio {
    --matter-helper-theme: var(--matter-theme-rgb, var(--matter-primary-rgb, 33, 150, 243));
    z-index: 0;
    position: relative;
    display: inline-block;
    color: rgba(var(--matter-onsurface-rgb, 0, 0, 0), 0.87);
    font-family: var(--matter-font-family, "Roboto", "Segoe UI", BlinkMacSystemFont, system-ui, -apple-system);
    font-size: 16px;
    line-height: 1.5;
}

/* Circle */
.matter-radio > input {
    appearance: none;
    -moz-appearance: none;
    -webkit-appearance: none;
    z-index: 1;
    position: absolute;
    display: block;
    box-sizing: border-box;
    margin: 2px 0;
    border: solid 2px; /* Safari */
    border-color: rgba(var(--matter-onsurface-rgb, 0, 0, 0), 0.6);
    border-radius: 50%;
    width: 20px;
    height: 20px;
    outline: none;
    cursor: pointer;
    transition: border-color 0.2s;
}

/* Span */
.matter-radio > input + span {
    display: inline-block;
    box-sizing: border-box;
    padding-left: 30px;
    width: inherit;
    cursor: pointer;
}

/* Highlight */
.matter-radio > input + span::before {
    content: "";
    position: absolute;
    left: -10px;
    top: -8px;
    display: block;
    border-radius: 50%;
    width: 40px;
    height: 40px;
    background-color: rgb(var(--matter-onsurface-rgb, 0, 0, 0));
    opacity: 0;
    transform: scale(0);
    pointer-events: none;
    transition: opacity 0.3s, transform 0.2s;
}

/* Check Mark */
.matter-radio > input + span::after {
    content: "";
    display: block;
    position: absolute;
    top: 2px;
    left: 0;
    border-radius: 50%;
    width: 10px;
    height: 10px;
    background-color: var(--color-primary);
    transform: translate(5px, 5px) scale(0);
    transition: transform 0.2s;
}

/* Checked */
.matter-radio > input:checked {
    border-color: var(--color-primary);
}

.matter-radio > input:checked + span::before {
    background-color: var(--color-primary);
}

.matter-radio > input:checked + span::after {
    transform: translate(5px, 5px) scale(1);
}

/* Hover, Focus */
.matter-radio:hover > input + span::before {
    transform: scale(1);
    opacity: 0.04;
}

.matter-radio > input:focus + span::before  {
    transform: scale(1);
    opacity: 0.12;
}

.matter-radio:hover > input:focus + span::before {
    transform: scale(1);
    opacity: 0.16;
}

/* Active */
.matter-radio:active > input {
    border-color: var(--color-primary);
}

.matter-radio:active > input + span::before,
.matter-radio:active:hover > input + span::before {
    opacity: 1;
    transform: scale(0);
    transition: transform 0s, opacity 0s;
}

/* Disabled */
.matter-radio > input:disabled {
    border-color: rgba(var(--matter-onsurface-rgb, 0, 0, 0), 0.38);
    cursor: initial;
}

.matter-radio > input:disabled + span {
    color: rgba(var(--matter-onsurface-rgb, 0, 0, 0), 0.38);
    cursor: initial;
}

.matter-radio > input:disabled + span::before {
    opacity: 0;
    transform: scale(0);
}

.matter-radio > input:disabled + span::after {
    background-color: currentColor;
}











/*SWITCH*/
.matter-switch {
    --matter-helper-theme: var(--matter-theme-rgb, var(--matter-primary-rgb, 33, 150, 243));
    z-index: 0;
    position: relative;
    display: inline-block;
    color: rgba(var(--matter-onsurface-rgb, 0, 0, 0), 0.87);
    font-family: var(--matter-font-family, "Roboto", "Segoe UI", BlinkMacSystemFont, system-ui, -apple-system);
    font-size: 16px;
    line-height: 1.5;
}

/* Track */
.matter-switch > input {
    appearance: none;
    -moz-appearance: none;
    -webkit-appearance: none;
    z-index: 1;
    position: relative;
    float: right;
    display: inline-block;
    margin: 0 0 0 5px;
    border: solid 5px transparent;
    border-radius: 12px;
    width: 46px;
    height: 24px;
    background-clip: padding-box;
    background-color: rgba(var(--matter-onsurface-rgb, 0, 0, 0), 0.38);
    outline: none;
    cursor: pointer;
    transition: background-color 0.2s, opacity 0.2s;
}

/* Span */
.matter-switch > input + span {
    display: inline-block;
    box-sizing: border-box;
    margin-right: -51px;
    padding-right: 51px;
    width: inherit;
    cursor: pointer;
}

/* Highlight */
.matter-switch > input + span::before {
    content: "";
    position: absolute;
    right: 11px;
    top: -8px;
    display: block;
    border-radius: 50%;
    width: 40px;
    height: 40px;
    background-color: rgb(var(--matter-onsurface-rgb, 0, 0, 0));
    opacity: 0;
    transform: scale(1);
    pointer-events: none;
    transition: opacity 0.3s 0.1s, transform 0.2s 0.1s;
}

/* Thumb */
.matter-switch > input + span::after {
    content: "";
    z-index: 1;
    position: absolute;
    top: 2px;
    right: 21px;
    border-radius: 50%;
    width: 20px;
    height: 20px;
    background-color: rgb(var(--matter-surface-rgb, 255, 255, 255));
    box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);
    pointer-events: none;
    transition: background-color 0.2s, transform 0.2s;
}

/* Checked */
.matter-switch > input:checked {
    background-color: var(--color-primary);
    opacity: 60%;
}

.matter-switch > input:checked + span::before {
    right: -5px;
    background-color: var(--color-primary);
}

.matter-switch > input:checked + span::after {
    background-color: var(--color-primary);
    transform: translateX(16px);
}

/* Hover, Focus */
.matter-switch:hover > input + span::before {
    opacity: 0.04;
}

.matter-switch > input:focus + span::before {
    opacity: 0.12;
}

.matter-switch:hover > input:focus + span::before {
    opacity: 0.16;
}

/* Active */
.matter-switch:active > input {
    background-color: rgb(var(--color-primary-rgb) / 60%);
}

.matter-switch:active > input:checked {
    background-color: rgba(var(--matter-onsurface-rgb, 0, 0, 0), 0.38);
}

.matter-switch:active > input + span::before {
    opacity: 1;
    transform: scale(0);
    transition: transform 0s, opacity 0s;
}

/* Disabled */
.matter-switch > input:disabled {
    background-color: rgba(var(--matter-onsurface-rgb, 0, 0, 0), 0.38);
    opacity: 0.38;
    cursor: default;
}

.matter-switch > input:checked:disabled {
    background-color: rgb(var(--color-primary-rgb) / 60%);
}

.matter-switch > input:disabled + span {
    color: rgba(var(--matter-onsurface-rgb, 0, 0, 0, 0.38));
    cursor: default;
}

.matter-switch > input:disabled + span::before {
    z-index: 1;
    margin: 10px;
    width: 20px;
    height: 20px;
    background-color: rgb(var(--matter-surface-rgb, 255, 255, 255));
    transform: scale(1);
    opacity: 1;
    transition: none;
}

.matter-switch > input:disabled + span::after {
    opacity: 0.38;
}
